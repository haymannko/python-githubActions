
name: Flask CI/CD with Trivy Scan and Artifacts

on:
  push:
    branches: [ "dev", "feat/*" ]
  pull_request:
    branches: [ "main", "dev", "feat/*" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t flask-app:latest .

      # Run Trivy to scan for vulnerabilities before pushing
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'flask-app:latest'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          exit-code: '1' #fail if vulnerabilities found
          severity: 'CRITICAL,HIGH'

      # âœ… Save Docker image as artifact if Trivy passes
      - name: Save Docker image as artifact
        if: success()
        run: |
          docker save flask-app:latest -o flask-app.tar

      - name: Upload artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: flask-app
          path: flask-app.tar


